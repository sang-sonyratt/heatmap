{"version":3,"sources":["../../../src/viewports/web-mercator-viewport.js"],"names":["TILE_SIZE","EARTH_CIRCUMFERENCE","DEGREES_TO_RADIANS","Math","PI","unitsPerMeter","latitude","latCosine","cos","WebMercatorViewport","opts","longitude","zoom","pitch","bearing","nearZMultiplier","farZMultiplier","orthographic","projectionMatrix","repeat","worldOffset","legacyMeterSizes","width","height","altitude","scale","pow","fovy","projectionParameters","viewMatrixUncentered","viewOffset","Matrix4","translate","multiplyLeft","viewMatrix","focalDistance","_subViewports","_pseudoMeters","Object","freeze","xyz","projectFlat","X","Y","Z","unprojectFlat","lngLatZ","coords","pixel","fromLocation","pixelUnprojectionMatrix","toLocation","vec2","add","negate","newCenter","center","options","corners","z","min","max","bounds","length","getBounds","minOffset","floor","maxOffset","ceil","x","offsetViewport","push","Viewport","displayName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// View and Projection Matrix calculations for mapbox-js style\n// map view properties\nimport Viewport from './viewport';\n\nimport {\n  pixelsToWorld,\n  getViewMatrix,\n  addMetersToLngLat,\n  getProjectionParameters,\n  altitudeToFovy,\n  fovyToAltitude,\n  fitBounds,\n  getBounds\n} from '@math.gl/web-mercator';\n\n// TODO - import from math.gl\nimport * as vec2 from 'gl-matrix/vec2';\nimport {Matrix4} from 'math.gl';\n\nconst TILE_SIZE = 512;\nconst EARTH_CIRCUMFERENCE = 40.03e6;\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nfunction unitsPerMeter(latitude) {\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n  return TILE_SIZE / EARTH_CIRCUMFERENCE / latCosine;\n}\n\nexport default class WebMercatorViewport extends Viewport {\n  /**\n   * @classdesc\n   * Creates view/projection matrices from mercator params\n   * Note: The Viewport is immutable in the sense that it only has accessors.\n   * A new viewport instance should be created if any parameters have changed.\n   */\n  /* eslint-disable complexity, max-statements */\n  constructor(opts = {}) {\n    const {\n      latitude = 0,\n      longitude = 0,\n      zoom = 11,\n      pitch = 0,\n      bearing = 0,\n      nearZMultiplier = 0.1,\n      farZMultiplier = 1.01,\n      orthographic = false,\n      projectionMatrix,\n\n      repeat = false,\n      worldOffset = 0,\n\n      // backward compatibility\n      // TODO: remove in v9\n      legacyMeterSizes = false\n    } = opts;\n\n    let {width, height, altitude = 1.5} = opts;\n    const scale = Math.pow(2, zoom);\n\n    // Silently allow apps to send in 0,0 to facilitate isomorphic render etc\n    width = width || 1;\n    height = height || 1;\n\n    let fovy;\n    let projectionParameters = null;\n    if (projectionMatrix) {\n      altitude = projectionMatrix[5] / 2;\n      fovy = altitudeToFovy(altitude);\n    } else {\n      if (opts.fovy) {\n        fovy = opts.fovy;\n        altitude = fovyToAltitude(fovy);\n      } else {\n        fovy = altitudeToFovy(altitude);\n      }\n      projectionParameters = getProjectionParameters({\n        width,\n        height,\n        pitch,\n        fovy,\n        nearZMultiplier,\n        farZMultiplier\n      });\n    }\n\n    // The uncentered matrix allows us two move the center addition to the\n    // shader (cheap) which gives a coordinate system that has its center in\n    // the layer's center position. This makes rotations and other modelMatrx\n    // transforms much more useful.\n    let viewMatrixUncentered = getViewMatrix({\n      height,\n      pitch,\n      bearing,\n      scale,\n      altitude\n    });\n\n    if (worldOffset) {\n      const viewOffset = new Matrix4().translate([512 * worldOffset, 0, 0]);\n      viewMatrixUncentered = viewOffset.multiplyLeft(viewMatrixUncentered);\n    }\n\n    super({\n      ...opts,\n      // x, y,\n      width,\n      height,\n\n      // view matrix\n      viewMatrix: viewMatrixUncentered,\n      longitude,\n      latitude,\n      zoom,\n\n      // projection matrix parameters\n      ...projectionParameters,\n      fovy,\n      focalDistance: altitude\n    });\n\n    // Save parameters\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.zoom = zoom;\n    this.pitch = pitch;\n    this.bearing = bearing;\n    this.altitude = altitude;\n    this.fovy = fovy;\n\n    this.orthographic = orthographic;\n\n    this._subViewports = repeat ? [] : null;\n    this._pseudoMeters = legacyMeterSizes;\n\n    Object.freeze(this);\n  }\n  /* eslint-enable complexity, max-statements */\n\n  get subViewports() {\n    if (this._subViewports && !this._subViewports.length) {\n      // Cache sub viewports so that we only calculate them once\n      const bounds = this.getBounds();\n\n      const minOffset = Math.floor((bounds[0] + 180) / 360);\n      const maxOffset = Math.ceil((bounds[2] - 180) / 360);\n\n      for (let x = minOffset; x <= maxOffset; x++) {\n        const offsetViewport = x\n          ? new WebMercatorViewport({\n              ...this,\n              worldOffset: x\n            })\n          : this;\n        this._subViewports.push(offsetViewport);\n      }\n    }\n    return this._subViewports;\n  }\n\n  projectPosition(xyz) {\n    if (this._pseudoMeters) {\n      // Backward compatibility\n      return super.projectPosition(xyz);\n    }\n    const [X, Y] = this.projectFlat(xyz);\n    const Z = (xyz[2] || 0) * unitsPerMeter(xyz[1]);\n    return [X, Y, Z];\n  }\n\n  unprojectPosition(xyz) {\n    if (this._pseudoMeters) {\n      // Backward compatibility\n      return super.unprojectPosition(xyz);\n    }\n    const [X, Y] = this.unprojectFlat(xyz);\n    const Z = (xyz[2] || 0) / unitsPerMeter(Y);\n    return [X, Y, Z];\n  }\n\n  /**\n   * Add a meter delta to a base lnglat coordinate, returning a new lnglat array\n   *\n   * Note: Uses simple linear approximation around the viewport center\n   * Error increases with size of offset (roughly 1% per 100km)\n   *\n   * @param {[Number,Number]|[Number,Number,Number]) lngLatZ - base coordinate\n   * @param {[Number,Number]|[Number,Number,Number]) xyz - array of meter deltas\n   * @return {[Number,Number]|[Number,Number,Number]) array of [lng,lat,z] deltas\n   */\n  addMetersToLngLat(lngLatZ, xyz) {\n    return addMetersToLngLat(lngLatZ, xyz);\n  }\n\n  panByPosition(coords, pixel) {\n    const fromLocation = pixelsToWorld(pixel, this.pixelUnprojectionMatrix);\n    const toLocation = this.projectFlat(coords);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    const [longitude, latitude] = this.unprojectFlat(newCenter);\n    return {longitude, latitude};\n  }\n\n  getBounds(options = {}) {\n    const corners = getBounds(this, options.z || 0);\n\n    return [\n      Math.min(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.min(corners[0][1], corners[1][1], corners[2][1], corners[3][1]),\n      Math.max(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.max(corners[0][1], corners[1][1], corners[2][1], corners[3][1])\n    ];\n  }\n\n  /**\n   * Returns a new viewport that fit around the given rectangle.\n   * Only supports non-perspective mode.\n   * @param {Array} bounds - [[lon, lat], [lon, lat]]\n   * @param {Number} [options.padding] - The amount of padding in pixels to add to the given bounds.\n   * @param {Array} [options.offset] - The center of the given bounds relative to the map's center,\n   *    [x, y] measured in pixels.\n   * @returns {WebMercatorViewport}\n   */\n  fitBounds(bounds, options = {}) {\n    const {width, height} = this;\n    const {longitude, latitude, zoom} = fitBounds({width, height, bounds, ...options});\n    return new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  }\n}\n\nWebMercatorViewport.displayName = 'WebMercatorViewport';\n"],"file":"web-mercator-viewport.js"}